{"ts":1380594256980,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//Lamog, Rob\n//Lab Ex #6\n//Hart\n//09/30/13\n\n#include <iostream>\n#include <string>\nusing namespace std;\n\nclass StringStack{\npublic:\n    static const unsigned STACK_SIZE = 5;\n    StringStack();\n    StringStack &push(string value);\n    char pop();\n    unsigned elements() const;\nprivate:\n    string data[STACK_SIZE];\n    unsigned used;\n};\n\nclass DoubleStack{\npublic:\n    static const unsigned STACK_SIZE = 5;\n    DoubleStack();\n    DoubleStack &push(double value);\n    double pop();\n    unsigned elements() const;\nprivate:\n    double data[STACK_SIZE];\n    unsigned used;\n};\n\ndouble evaluate();\nbool die( const string & msg );\n\nint main(){\n    \n    //system(\"pause\");\n    return 0;\n} //main()\n\nStringStack::StringStack(){\n    used = 0;\n}\nStringStack &StringStack::push(string value){\n    if (used == STACK_SIZE) die(\"Stack overflow.\");\n    data[used++] = value;\n    return *this;\n}\nchar StringStack::pop(){\n    if (used == 0) die(\"Stack underflow.\");\n    return data[--used];\n}\nunsigned StringStack::elements() const{\n    return used;\n}\n\nDoubleStack::DoubleStack(){\n    used = 0;\n}\nDoubleStack &DoubleStack::push(double value){\n    if (used == STACK_SIZE) die(\"Stack overflow.\");\n    data[used++] = value;\n    return *this;\n}\ndouble DoubleStack::pop(){\n    if (used == 0) die(\"Stack underflow.\");\n    return data[--used];\n}\nunsigned DoubleStack::elements() const{\n    return used;\n}\n\ndouble evaluate(){\n    DoubleStack oprnd;\n    StringStack oprtr;\n    string op;\n    double a=0, b=0, c=0, d=0; // #'s in expression\n    \n    for(;;){\n        char descriptor; // one of    #    !    .\n        cin >>descriptor;\n        switch( descriptor ){\n        case '#': // next token is a number\n            cin >>a;\n            oprnd.push( a );\n            break;\n        case '!': // next token is an operator\n            cin >>op;\n            if( op == \"(\" ){\n                oprtr.push(op);\n            }else if( oprtr == \"/\" ){\n                b = oprnd.pop();\n                a = oprnd.pop();\n                oprnd.push( a/b );\n            }else if( oprtr == \"max3\" ){\n                c = oprnd.pop();\n                b = oprnd.pop();\n                a = oprnd.pop();\n                oprnd.push( a>b && a>c ? a : b>c ? b : c );\n            }else if( oprtr == \"mat\" ){\n                d = oprnd.pop();\n                c = oprnd.pop();\n                b = oprnd.pop();\n                a = oprnd.pop();\n                oprnd.push( a*d - b*c );\n            } // if\n            break;                \n        case '.':\n            return oprnd.pop();\n        } // switch\n    } // for\n} // evaluate\n\nbool die( const string & msg ){\n\t//cerr <<endl <<\"Fatal error: \" <<msg << endl;\n\t//exit( EXIT_FAILURE );\n\n\tcout << endl << \"Fatal error: \" << msg << endl;\n\treturn true;\n}"]],"start1":0,"start2":0,"length1":0,"length2":2754}]],"length":2754}
{"contributors":[],"silentsave":true,"ts":1380595661841,"patch":[[{"diffs":[[0,"nclude <"],[-1,""],[0,""],[1,"cmath>\n#include <"],[0,"iostream"]],"start1":46,"start2":46,"length1":16,"length2":33},{"diffs":[[0,"e);\n    "],[-1,"char"],[1,"string"],[0," pop();\n"]],"start1":242,"start2":242,"length1":20,"length2":22},{"diffs":[[0,"this;\n}\n"],[-1,"char"],[1,"string"],[0," StringS"]],"start1":889,"start2":889,"length1":20,"length2":22},{"diffs":[[0,"   char "],[-1,"descriptor"],[1,"calcInput"],[0,"; // one"]],"start1":1556,"start2":1556,"length1":26,"length2":25},{"diffs":[[0,"  cin >>"],[-1,"descriptor"],[1," calcInput"],[0,";\n      "]],"start1":1606,"start2":1606,"length1":26,"length2":26},{"diffs":[[0,"tch("],[-1," descriptor "],[1,"calcInput"],[0,"){\n "]],"start1":1637,"start2":1637,"length1":20,"length2":17},{"diffs":[[0,"  cin >>"],[1," "],[0,"a;\n     "]],"start1":1707,"start2":1707,"length1":16,"length2":17},{"diffs":[[0,"nd.push("],[-1," a "],[1,"a"],[0,");\n     "]],"start1":1734,"start2":1734,"length1":19,"length2":17},{"diffs":[[0,"  cin >>"],[1," "],[0,"op;\n    "]],"start1":1822,"start2":1822,"length1":16,"length2":17},{"diffs":[[0,"      if"],[-1,"("],[0," "],[1,"("],[0,"op == \"("]],"start1":1841,"start2":1841,"length1":18,"length2":18},{"diffs":[[0,"p == \"(\""],[-1," ){\n               "],[1,")"],[0," oprtr.p"]],"start1":1852,"start2":1852,"length1":35,"length2":17},{"diffs":[[0,"    "],[-1,"}else if( oprtr == \"/\" ){\n                b = oprnd.pop();\n                a = oprnd.pop();\n                oprnd.push( a/b );\n            }else if( oprtr == \"max3\" ){\n                c = oprnd.pop();\n                "],[1,"if (op == \"**\") oprtr.push(op);\n\t\t\tif (op == \"/\"){\n\t\t\t\t"],[0,"b = "]],"start1":1886,"start2":1886,"length1":225,"length2":63},{"diffs":[[0,".pop();\n"],[-1,"                "],[1,"\t\t\t\t"],[0,"a = oprn"]],"start1":1954,"start2":1954,"length1":32,"length2":20},{"diffs":[[0,"();\n"],[-1,"                oprnd.push( a>b && a>c ? a : b>c ? b : c );\n            }else if( oprtr == \"mat\" ){\n                d = oprnd.p"],[1,"\t\t\t\toprnd.push(a/b);\n\t\t\t\toprtr.push("],[0,"op"],[-1,"("],[0,");\n"],[-1,"                c = oprnd.pop();\n                b = oprnd.pop();\n                a = oprnd.pop();\n                oprnd.push( a*d - b*c );\n            } // if"],[1,"\t\t\t}\n\t\t\tif (op == \")\")"],[0,"\n   "]],"start1":1979,"start2":1979,"length1":300,"length2":71}]],"length":2350,"saved":false}
